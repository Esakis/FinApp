# ===============================================================
#  Build & Deploy  –  Angular SPA + .NET 8 Web API  →  Azure App Service (F1)
# ===============================================================

name: Build and deploy FinApp to Azure Web App (F1)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ANGULAR_DIR: Frontend/FinAppFront
  API_CSPROJ:  Backend/Store/Store.csproj   # ← Twoje realne API
  PUBLISH_DIR: publish

#─────────────────────────────────────────────────────────────────
# 1) BUILD
#─────────────────────────────────────────────────────────────────
jobs:
  build:
    runs-on: windows-latest
    permissions: { contents: read }

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with: { node-version: 18.x }

    - name: Setup .NET SDK 8.x
      uses: actions/setup-dotnet@v4
      with: { dotnet-version: 8.x }

    # ─── FRONTEND ───────────────────────────────────────────────
    - name: Build Angular
      working-directory: ${{ env.ANGULAR_DIR }}
      run: |
        npm ci
        npm run build -- --configuration production

    # ─── SPA → wwwroot ─────────────────────────────────────────
    - name: Copy Angular build to API/wwwroot
      shell: pwsh
      run: |
        $dest = Join-Path -Path (Split-Path '${{ env.API_CSPROJ }}') -ChildPath 'wwwroot'
        New-Item -ItemType Directory -Force -Path $dest | Out-Null
        robocopy "${{ env.ANGULAR_DIR }}/dist/fin-app-front" "$dest" /E /NJH /NJS /NDL
        if ($LASTEXITCODE -gt 3) { exit $LASTEXITCODE } else { exit 0 }

    # ─── BACKEND ───────────────────────────────────────────────
    - name: dotnet build
      run: dotnet build ${{ env.API_CSPROJ }} -c Release

    - name: dotnet publish
      run: dotnet publish ${{ env.API_CSPROJ }} -c Release -o ${{ env.PUBLISH_DIR }}

    # artefakt dla jobu deploy
    - uses: actions/upload-artifact@v4
      with:
        name: finapp-artifact
        path: ${{ env.PUBLISH_DIR }}

#─────────────────────────────────────────────────────────────────
# 2) DEPLOY
#─────────────────────────────────────────────────────────────────
  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/download-artifact@v4
      with: { name: finapp-artifact }

    - name: Azure login (OIDC)
      uses: azure/login@v2
      with:
        client-id:       ${{ secrets.AZUREAPPSERVICE_CLIENTID_9213863F16E6412D89AFBADD35BF055E }}
        tenant-id:       ${{ secrets.AZUREAPPSERVICE_TENANTID_0FF71B2D203B4C1A8DD949B53A42CF6A }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3FC1188BDFCB4392A0BD5592CF2323F1 }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name:  FinApp          # dokładna nazwa w portalu
        slot-name: Production
        package:   ${{ env.PUBLISH_DIR }}
