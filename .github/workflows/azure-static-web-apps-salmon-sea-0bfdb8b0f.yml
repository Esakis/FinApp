# .github/workflows/static-web-apps.yml
name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # ────────────────────────────────────────────────────────────
    # 1. Checkout źródeł
    # ────────────────────────────────────────────────────────────
    - name: Checkout repository
      uses: actions/checkout@v3

    # ────────────────────────────────────────────────────────────
    # 2. Front-end – Angular
    # ────────────────────────────────────────────────────────────
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: npm
        cache-dependency-path: Frontend/FinAppFront/package-lock.json

    - name: Build Angular app
      working-directory: Frontend/FinAppFront
      run: |
        npm ci
        npm run build -- --configuration production     # ➜ dist/fin-app-front

    # Debug – podgląd artefaktów
    - name: Debug – zawartość builda
      working-directory: Frontend/FinAppFront
      run: ls -R dist

    # ────────────────────────────────────────────────────────────
    # 3. Back-end – Azure Functions (.NET 6)
    #    (budujemy tu, żeby złapać błędy wcześnie; Azure zbuduje raz jeszcze)
    # ────────────────────────────────────────────────────────────
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Build API Functions (lokalna walidacja)
      working-directory: Backend/Store
      run: |
        dotnet restore
        dotnet build --configuration Release

    # ────────────────────────────────────────────────────────────
    # 4. Deploy do Azure Static Web Apps
    # ────────────────────────────────────────────────────────────
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        # token z portalu Azure
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        # token GitHub – komentarze w PR-ach
        repo_token: ${{ secrets.GITHUB_TOKEN }}

        action: upload

        # FRONT-END
        # — zawiera już index.html; build pominięty
        app_location: Frontend/FinAppFront/dist/fin-app-front
        skip_app_build: true          # ← kluczowe
        output_location: ''           # ← musi być puste przy skip_app_build

        # BACK-END
        # — źródła Functions; akcja sama zbuduje (skip_api_build domyślnie = false)
        api_location: Backend/Store
